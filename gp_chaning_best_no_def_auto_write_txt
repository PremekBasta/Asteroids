3: 
if_then_else(compare(mul(mul(add(add(mul(mul(mul(-1, ARG2), mul(3, -1)), add(mul(ARG1, -1), add(ARG0, 5))), add(add(add(3, 0), mul(ARG0, -1)), add(mul(ARG2, ARG0), mul(3, ARG2)))), add(add(mul(mul(5, ARG3), mul(ARG2, 100)), add(add(-1, 3), mul(-1, 100))), mul(add(add(ARG1, ARG0), mul(ARG1, ARG0)), add(mul(100, ARG2), add(0, -1))))), mul(add(add(add(add(5, ARG0), add(3, ARG0)), mul(add(10, 0), add(ARG1, ARG2))), mul(mul(mul(ARG2, 5), add(3, ARG3)), add(mul(1, ARG1), mul(ARG0, ARG2)))), mul(mul(mul(add(10, ARG3), mul(ARG1, ARG0)), add(add(3, ARG0), add(-1, -1))), add(add(add(5, 100), mul(5, 3)), add(add(0, 100), add(10, 1)))))), add(mul(add(mul(add(add(ARG3, 100), mul(5, -1)), mul(mul(3, 1), add(ARG0, 5))), mul(add(add(ARG0, -1), add(ARG1, ARG2)), add(mul(ARG3, 0), add(ARG2, -1)))), add(add(mul(mul(-1, ARG2), add(1, -1)), add(add(10, 100), add(ARG2, 10))), mul(add(add(3, ARG3), mul(5, ARG2)), add(add(5, 100), mul(0, ARG0))))), add(add(add(mul(add(ARG2, 10), mul(10, 1)), mul(mul(0, 1), mul(1, 10))), mul(mul(add(3, 10), add(ARG2, 1)), add(add(1, 3), add(0, 100)))), add(mul(mul(mul(100, 100), mul(ARG2, 0)), add(add(-1, -1), add(0, ARG0))), add(add(add(ARG1, ARG1), add(ARG1, 10)), add(add(ARG3, 3), add(3, ARG0))))))), mul(add(add(mul(add(mul(add(10, ARG3), mul(1, 0)), mul(mul(ARG1, -1), add(3, 10))), add(add(mul(100, 3), mul(ARG2, ARG3)), add(add(ARG2, ARG0), add(ARG3, 0)))), mul(add(mul(mul(10, 100), mul(10, 1)), add(add(3, 0), mul(ARG2, 1))), add(mul(add(ARG3, 0), mul(ARG1, ARG3)), add(add(-1, ARG0), mul(ARG3, ARG0))))), add(mul(mul(mul(mul(100, ARG0), add(100, ARG0)), mul(mul(1, ARG3), add(-1, ARG1))), add(mul(add(3, 0), mul(5, 100)), add(mul(100, ARG0), add(-1, 3)))), add(add(mul(add(1, ARG3), mul(-1, 0)), add(mul(0, ARG0), add(1, 0))), add(add(add(0, ARG1), add(10, ARG0)), mul(mul(5, 100), mul(100, ARG0)))))), add(mul(add(mul(mul(mul(-1, 10), mul(100, ARG3)), add(mul(ARG0, ARG0), mul(100, ARG3))), add(add(add(1, ARG2), add(0, 10)), add(mul(1, -1), add(-1, ARG3)))), add(add(mul(mul(3, -1), mul(ARG2, 3)), mul(mul(ARG1, ARG2), mul(3, ARG3))), mul(add(add(5, 0), add(ARG2, 10)), add(add(5, 100), mul(0, ARG2))))), add(mul(mul(add(mul(3, -1), mul(ARG0, 3)), add(add(10, 5), mul(0, ARG0))), mul(mul(mul(ARG1, 10), add(0, ARG0)), mul(add(5, 0), add(ARG2, ARG3)))), add(add(add(mul(5, -1), add(3, 0)), add(add(10, 10), mul(100, 0))), mul(mul(mul(10, 100), mul(100, ARG1)), add(mul(10, 1), mul(10, 3)))))))), if_then_else(compare(add(mul(add(add(mul(mul(-1, 5), mul(10, 1)), mul(mul(5, -1), add(1, ARG2))), mul(add(add(3, 5), mul(1, 3)), add(mul(-1, ARG0), mul(ARG3, ARG0)))), add(mul(add(add(0, 3), add(5, 100)), add(mul(ARG0, -1), mul(ARG1, 5))), mul(add(mul(ARG3, ARG1), add(100, 10)), mul(mul(5, 1), add(0, ARG3))))), mul(mul(mul(add(mul(ARG1, 0), add(ARG1, 1)), mul(mul(ARG0, -1), add(10, 0))), add(add(add(ARG0, ARG3), mul(1, ARG2)), mul(add(10, 0), mul(1, ARG3)))), add(mul(add(add(3, ARG2), add(ARG3, 100)), add(mul(5, 1), mul(ARG0, -1))), mul(add(add(3, -1), mul(5, 0)), mul(add(ARG2, 0), add(1, ARG3)))))), mul(add(mul(add(add(mul(3, -1), mul(ARG3, 1)), add(mul(ARG2, 10), mul(-1, 0))), add(mul(mul(ARG1, ARG1), add(1, 0)), add(add(ARG1, -1), add(0, 10)))), mul(mul(mul(add(1, ARG2), mul(1, 1)), add(mul(5, ARG3), add(0, ARG2))), mul(mul(mul(ARG2, 5), add(ARG1, 5)), mul(mul(0, ARG3), mul(ARG0, ARG3))))), mul(mul(add(mul(add(100, 10), mul(0, 5)), add(mul(-1, 5), mul(1, -1))), mul(mul(mul(100, ARG3), mul(5, 100)), add(mul(5, -1), mul(0, ARG2)))), add(mul(add(add(ARG3, 1), add(100, 3)), add(mul(ARG2, 0), add(ARG2, 3))), add(mul(add(5, 3), add(5, 0)), mul(add(1, 5), add(1, ARG0))))))), if_then_else(compare(add(add(add(mul(add(ARG2, ARG1), mul(10, 1)), add(add(-1, 5), mul(ARG1, 10))), mul(add(mul(ARG3, 100), add(0, ARG0)), add(add(ARG3, 1), mul(ARG2, 10)))), add(mul(add(add(0, 5), mul(0, 3)), mul(add(ARG2, -1), add(ARG3, 0))), add(mul(add(3, 3), add(ARG0, 100)), add(add(ARG2, ARG2), mul(1, 100))))), add(mul(add(mul(add(ARG1, 3), mul(100, ARG2)), add(add(5, 100), add(-1, ARG1))), add(mul(add(ARG1, 3), mul(0, 0)), mul(add(5, 1), add(ARG2, 0)))), add(mul(add(mul(10, ARG3), mul(100, ARG1)), mul(mul(5, 100), add(3, ARG1))), mul(mul(add(0, -1), add(0, 1)), add(add(0, 3), add(ARG1, -1)))))), if_then_else(compare(add(mul(add(mul(0, 3), add(-1, ARG1)), mul(mul(100, 1), mul(100, -1))), mul(add(mul(0, ARG0), add(100, ARG2)), mul(add(100, 10), add(-1, ARG2)))), add(add(mul(add(5, 3), mul(5, 1)), mul(add(ARG3, ARG3), add(0, 0))), add(mul(add(5, 1), mul(100, 1)), add(mul(ARG0, 0), add(ARG0, ARG3))))), if_then_else(compare(mul(mul(mul(5, 10), mul(100, ARG3)), mul(mul(ARG3, ARG2), add(3, 5))), add(add(add(ARG2, ARG2), add(10, 1)), mul(add(ARG2, ARG1), mul(-1, ARG3)))), if_then_else(compare(add(add(0, 0), add(ARG0, 0)), mul(add(ARG0, 5), add(ARG2, 1))), if_then_else(compare(mul(ARG1, 0), mul(0, ARG1)), if_then_else(compare(100, ARG2), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, 10), mul(ARG3, 3)), if_then_else(compare(100, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(1, ARG2), mul(-1, 10)), add(add(5, 5), mul(100, ARG2))), if_then_else(compare(mul(ARG2, 5), mul(5, 100)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG3, ARG3), mul(3, 1)), if_then_else(compare(5, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(add(0, 5), mul(100, ARG0)), add(add(0, 1), add(ARG1, 100))), add(add(mul(0, 5), add(1, ARG2)), mul(add(-1, ARG2), add(0, 1)))), if_then_else(compare(add(mul(1, -1), mul(-1, -1)), mul(mul(-1, 1), add(ARG1, 0))), if_then_else(compare(add(1, 0), mul(100, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(10, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(-1, ARG0), mul(10, 3)), if_then_else(compare(ARG0, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG2, 100), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(mul(100, 0), add(0, 1)), add(mul(0, ARG2), add(10, 100))), if_then_else(compare(add(ARG0, ARG3), add(3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 3), mul(10, ARG2)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(add(mul(mul(100, -1), add(ARG0, 100)), add(add(0, ARG3), add(ARG0, ARG1))), mul(mul(add(3, 5), mul(ARG1, 0)), mul(add(10, 100), add(ARG2, ARG3)))), mul(mul(add(add(ARG0, ARG3), mul(5, ARG0)), add(mul(ARG3, 1), mul(ARG0, 5))), add(mul(add(3, 0), mul(ARG2, ARG0)), add(add(ARG0, -1), add(ARG3, 100))))), if_then_else(compare(add(add(add(10, 1), mul(1, 10)), add(mul(1, -1), mul(ARG1, ARG2))), mul(mul(mul(3, 3), add(100, 1)), mul(add(ARG0, 0), add(-1, ARG3)))), if_then_else(compare(mul(mul(3, ARG2), mul(-1, 10)), add(add(3, 1), add(0, -1))), if_then_else(compare(mul(-1, 10), mul(ARG0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(3, 10), mul(3, ARG1)), if_then_else(compare(3, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(3, ARG0), add(ARG2, 10)), add(add(ARG2, 10), mul(3, ARG3))), if_then_else(compare(mul(ARG1, ARG1), mul(100, 0)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 10), add(ARG0, 3)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(mul(add(mul(1, ARG2), mul(ARG2, ARG0)), mul(mul(ARG2, 5), add(10, 1))), add(add(mul(100, ARG3), mul(10, ARG0)), mul(mul(0, ARG2), add(0, ARG2)))), if_then_else(compare(mul(mul(ARG0, 0), mul(-1, -1)), mul(add(ARG0, 1), add(0, 3))), if_then_else(compare(mul(0, 100), mul(100, 3)), if_then_else(compare(1, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(3, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(ARG1, 3), mul(5, ARG1)), if_then_else(compare(5, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG3, -1), add(-1, ARG3)), mul(mul(ARG2, 3), add(1, 0))), if_then_else(compare(mul(ARG2, ARG3), add(10, 5)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(0, ARG3), add(0, ARG2)), if_then_else(compare(ARG2, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(add(add(mul(mul(mul(3, ARG3), mul(10, -1)), add(mul(100, -1), add(-1, ARG0))), mul(add(add(0, 1), mul(ARG3, 1)), add(mul(100, ARG0), mul(100, 3)))), mul(add(mul(add(-1, 3), mul(ARG2, -1)), add(add(5, 0), mul(5, 5))), add(mul(mul(5, ARG1), add(5, ARG0)), add(mul(ARG3, ARG0), mul(10, 5))))), mul(mul(mul(add(add(10, 100), mul(-1, -1)), mul(add(ARG3, ARG2), mul(100, ARG3))), mul(mul(add(1, 0), add(5, 5)), add(add(3, 1), add(3, ARG0)))), add(add(add(mul(ARG1, -1), mul(5, ARG1)), mul(mul(-1, 5), mul(5, 1))), add(add(add(ARG2, ARG2), add(-1, 10)), mul(add(ARG2, -1), mul(100, 100)))))), if_then_else(compare(mul(mul(mul(mul(10, 10), add(10, 100)), mul(add(1, 5), add(5, -1))), mul(add(add(-1, ARG3), mul(10, 100)), mul(add(5, ARG3), mul(10, ARG3)))), add(add(mul(add(ARG0, ARG1), add(ARG3, 3)), mul(add(0, 10), mul(10, 0))), mul(add(mul(-1, ARG3), add(10, 1)), add(add(ARG2, 5), mul(0, 0))))), if_then_else(compare(add(mul(add(10, 5), add(ARG1, ARG0)), mul(add(1, 100), mul(ARG1, 3))), add(add(mul(5, ARG0), add(ARG0, 5)), mul(add(0, 100), add(ARG0, 10)))), if_then_else(compare(add(mul(100, -1), mul(0, 100)), add(add(5, 5), add(3, ARG2))), if_then_else(compare(mul(-1, -1), mul(3, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG2, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(5, ARG3), mul(ARG0, 100)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(0, ARG3), mul(-1, 3)), mul(mul(5, 0), add(ARG1, 100))), if_then_else(compare(mul(ARG2, 10), add(10, ARG1)), if_then_else(compare(100, 10), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, -1), add(100, ARG3)), if_then_else(compare(-1, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(10, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(mul(add(100, 5), add(ARG1, ARG1)), mul(add(0, 10), add(10, ARG0))), mul(add(add(1, ARG2), mul(1, 0)), add(add(100, 3), mul(100, ARG0)))), if_then_else(compare(mul(mul(ARG1, -1), add(1, 5)), add(mul(ARG3, 1), mul(ARG0, ARG2))), if_then_else(compare(add(10, -1), mul(ARG2, 0)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(10, 1), mul(5, 0)), if_then_else(compare(5, 1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(add(ARG2, 5), mul(ARG3, 5)), add(mul(100, 0), add(-1, ARG3))), if_then_else(compare(mul(ARG3, ARG3), mul(100, 1)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(100, ARG2), mul(ARG0, 10)), if_then_else(compare(10, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG0, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_stop)))))), if_then_else(compare(mul(mul(mul(mul(ARG2, -1), mul(0, 3)), mul(add(-1, 3), add(-1, 10))), mul(add(add(10, ARG0), add(-1, 0)), add(mul(1, ARG0), add(100, 3)))), mul(mul(mul(mul(3, ARG0), add(ARG2, 3)), add(mul(3, 100), mul(-1, 0))), mul(add(add(5, 100), add(ARG3, ARG2)), mul(mul(0, 100), add(1, ARG1))))), if_then_else(compare(add(mul(add(-1, ARG1), mul(10, ARG2)), add(add(ARG3, 1), mul(ARG2, 10))), mul(mul(mul(ARG0, ARG3), add(0, ARG2)), mul(add(10, 100), mul(100, 100)))), if_then_else(compare(mul(add(5, 10), add(ARG3, ARG2)), add(mul(ARG2, ARG3), mul(10, 3))), if_then_else(compare(add(ARG3, 0), mul(5, ARG3)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(ARG3, ARG1), mul(ARG0, 10)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(-1, ARG0), mul(ARG1, ARG2)), mul(add(3, 100), mul(0, -1))), if_then_else(compare(mul(5, ARG0), add(0, 3)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, -1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(0, 100), mul(10, 100)), if_then_else(compare(5, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(add(add(add(10, ARG1), add(0, ARG1)), add(mul(5, 10), add(ARG2, 5))), mul(mul(mul(3, 1), add(0, -1)), mul(mul(ARG0, 5), mul(0, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(ARG2, 100)), mul(add(ARG1, 100), add(ARG0, 3))), if_then_else(compare(mul(ARG2, 0), add(-1, -1)), if_then_else(compare(-1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(100, ARG2), add(0, 5)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(100, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(mul(3, 10), mul(0, ARG3)), add(mul(10, ARG3), add(0, ARG0))), if_then_else(compare(add(10, 10), mul(10, 3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(-1, 3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(-1, 1), mul(100, -1)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(0, 1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(add(add(mul(100, -1), add(100, -1)), add(mul(0, ARG3), mul(0, ARG3))), mul(mul(mul(ARG0, ARG1), add(3, 10)), mul(add(ARG0, 0), mul(1, 10)))), add(add(mul(add(5, ARG0), add(100, 1)), add(mul(100, 100), add(ARG3, 0))), add(add(add(0, 3), mul(5, 5)), add(mul(ARG1, ARG2), mul(ARG2, 1))))), add(add(add(add(mul(-1, ARG2), add(5, ARG1)), add(mul(ARG1, 0), add(ARG1, 1))), add(add(mul(5, ARG2), mul(ARG1, ARG0)), mul(add(-1, 100), add(-1, 0)))), add(add(add(add(ARG3, ARG0), mul(ARG0, 10)), add(add(100, 3), add(-1, 5))), add(add(add(-1, -1), add(ARG2, 0)), add(add(-1, 1), add(ARG0, 5)))))), add(mul(add(add(mul(mul(1, 5), mul(1, 1)), mul(add(100, 5), add(100, ARG0))), mul(add(add(ARG2, ARG3), mul(ARG2, 0)), mul(add(100, ARG3), add(5, 10)))), mul(add(add(mul(5, 3), mul(5, 10)), mul(mul(1, ARG0), add(1, 0))), mul(mul(add(ARG3, 1), mul(ARG0, 3)), mul(mul(5, ARG3), add(-1, ARG1))))), add(add(mul(mul(add(5, ARG0), add(1, ARG0)), add(add(ARG0, 100), add(ARG3, ARG1))), add(add(mul(3, 100), add(10, ARG0)), add(mul(ARG0, ARG0), mul(ARG0, ARG0)))), mul(add(add(mul(ARG0, ARG2), add(100, 3)), mul(add(ARG2, ARG1), mul(3, -1))), mul(add(mul(100, 0), add(100, ARG2)), add(add(1, -1), add(ARG3, -1))))))), if_then_else(compare(add(mul(add(mul(mul(10, ARG3), mul(0, ARG1)), mul(add(10, 1), add(3, 1))), add(mul(add(10, 10), mul(10, ARG0)), add(add(1, ARG3), mul(ARG2, ARG3)))), add(mul(add(mul(0, 1), mul(ARG0, 0)), mul(mul(-1, -1), mul(10, 5))), mul(mul(mul(ARG0, 5), mul(10, ARG2)), add(mul(5, ARG3), mul(10, ARG2))))), add(mul(mul(mul(add(ARG1, ARG0), add(3, 10)), mul(mul(-1, ARG0), mul(-1, 10))), add(add(add(100, 1), add(1, 5)), mul(add(3, 5), add(3, ARG2)))), mul(mul(add(mul(-1, 1), mul(10, 0)), add(mul(3, 100), add(0, ARG0))), add(add(add(5, 3), add(ARG0, ARG2)), add(add(ARG3, 3), add(ARG3, 100)))))), if_then_else(compare(mul(add(mul(add(ARG3, ARG0), mul(10, 10)), mul(add(ARG3, 1), mul(5, 5))), mul(add(mul(10, ARG1), mul(ARG0, 100)), add(mul(0, -1), add(ARG0, 0)))), mul(mul(add(add(ARG0, ARG3), add(ARG0, -1)), add(add(1, 100), add(ARG1, 100))), mul(mul(mul(0, 1), add(-1, 1)), add(mul(0, 5), add(ARG0, -1))))), if_then_else(compare(add(mul(mul(10, -1), mul(100, 10)), add(mul(ARG1, ARG1), mul(3, -1))), add(add(add(ARG2, 0), add(ARG3, -1)), mul(add(ARG0, -1), add(3, 5)))), if_then_else(compare(add(add(5, 1), mul(ARG3, 3)), add(mul(ARG1, ARG1), mul(5, ARG0))), if_then_else(compare(mul(10, 5), add(1, ARG1)), if_then_else(compare(10, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG3), mul(ARG2, 3)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG2, 1), add(ARG3, 5))), if_then_else(compare(add(1, 1), add(1, 10)), if_then_else(compare(-1, 10), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(1, ARG3), mul(3, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG1, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(mul(mul(ARG2, ARG3), add(ARG3, ARG3)), add(mul(3, 5), add(10, 3))), mul(mul(add(5, 100), mul(0, 10)), add(mul(5, ARG0), mul(3, 5)))), if_then_else(compare(add(mul(-1, -1), add(-1, 100)), add(add(ARG2, ARG1), add(ARG1, ARG1))), if_then_else(compare(mul(5, ARG0), add(-1, ARG3)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(add(1, 5), add(3, -1)), if_then_else(compare(-1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(ARG1, ARG3), mul(ARG0, 10)), add(add(100, 10), add(10, 10))), if_then_else(compare(mul(10, ARG0), add(ARG3, 10)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(10, ARG2), mul(100, -1)), if_then_else(compare(-1, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(add(add(mul(add(100, 1), mul(ARG1, ARG3)), mul(mul(ARG1, 10), add(1, 100))), add(add(add(-1, ARG0), mul(5, 3)), add(mul(100, ARG2), add(100, 100)))), add(add(mul(mul(ARG0, 1), add(3, 0)), add(mul(10, -1), add(0, -1))), mul(add(add(1, ARG2), mul(5, 100)), mul(add(100, 10), add(3, 3))))), if_then_else(compare(mul(mul(add(1, 100), mul(10, ARG0)), mul(add(ARG1, ARG2), mul(10, 0))), mul(mul(add(0, 1), add(10, -1)), add(add(5, ARG1), mul(5, 1)))), if_then_else(compare(mul(mul(100, ARG3), add(1, 10)), add(add(1, ARG2), add(10, ARG0))), if_then_else(compare(mul(3, 10), mul(ARG3, ARG2)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(100, ARG1), mul(0, ARG0)), if_then_else(compare(-1, 10), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(add(1, ARG1), add(5, ARG1)), mul(mul(0, 100), add(5, 3))), if_then_else(compare(add(ARG1, 0), mul(ARG2, 3)), if_then_else(compare(10, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(-1, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(5, 10), add(ARG0, ARG0)), if_then_else(compare(ARG1, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), mul(ARG2, -1)), add(mul(ARG0, 10), mul(100, 3))), mul(add(add(-1, 100), add(0, 100)), add(mul(ARG0, ARG2), add(ARG1, 100)))), if_then_else(compare(mul(mul(0, ARG2), add(1, ARG3)), mul(mul(ARG2, 5), mul(ARG1, ARG1))), if_then_else(compare(mul(3, 3), add(100, ARG1)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(5, 10), mul(0, ARG0)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(100, 3), mul(10, -1)), add(mul(ARG1, 5), add(0, ARG1))), if_then_else(compare(add(ARG3, 3), add(10, 100)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(ARG0, 10), add(ARG0, 100)), if_then_else(compare(0, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(add(mul(add(add(1, 1), mul(ARG3, -1)), add(add(5, 10), add(10, ARG0))), add(mul(add(1, 0), mul(ARG0, 10)), mul(mul(-1, -1), add(ARG0, ARG3)))), mul(mul(mul(add(10, 1), mul(ARG1, 5)), mul(add(10, 1), add(ARG2, 0))), add(mul(add(100, 0), add(5, -1)), add(mul(0, ARG2), add(ARG1, ARG0))))), add(add(add(add(mul(10, 1), add(100, 5)), mul(mul(-1, 1), add(ARG2, 0))), add(add(mul(1, 10), add(ARG3, ARG1)), add(mul(10, ARG0), add(1, 10)))), add(add(add(mul(5, 100), mul(ARG0, 3)), mul(mul(ARG0, 100), mul(ARG2, ARG1))), mul(mul(mul(3, -1), mul(5, 5)), add(mul(5, 10), add(3, ARG2)))))), if_then_else(compare(add(mul(add(mul(5, ARG2), add(1, 3)), mul(mul(0, 5), mul(ARG0, 0))), mul(mul(add(-1, 100), mul(-1, ARG2)), mul(add(-1, ARG1), add(0, ARG3)))), mul(mul(add(mul(1, ARG1), add(1, ARG3)), mul(mul(10, 0), mul(ARG0, 3))), mul(mul(add(0, ARG3), mul(ARG2, 1)), mul(mul(-1, ARG0), add(ARG2, ARG2))))), if_then_else(compare(mul(mul(add(ARG3, ARG1), add(-1, ARG0)), mul(mul(5, 1), add(1, 10))), mul(add(add(-1, ARG3), mul(ARG0, -1)), add(mul(5, 0), mul(3, 3)))), if_then_else(compare(add(mul(5, 100), add(3, 100)), add(add(10, ARG1), add(ARG2, 1))), if_then_else(compare(mul(5, -1), add(5, 1)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(ARG0, 3), mul(5, 10)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 100), add(1, -1)), add(mul(1, -1), mul(ARG2, ARG3))), if_then_else(compare(mul(ARG2, 5), add(3, 100)), if_then_else(compare(0, 3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(-1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG0, 1), mul(-1, ARG1)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(add(add(5, ARG2), add(1, 5)), mul(add(1, 10), mul(-1, 5))), add(mul(add(3, 0), mul(-1, 3)), add(add(3, ARG2), mul(ARG2, 5)))), if_then_else(compare(add(mul(5, 0), add(0, ARG1)), add(add(10, 10), mul(ARG3, 3))), if_then_else(compare(mul(1, 0), add(1, -1)), if_then_else(compare(3, 10), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(ARG2, 100), add(-1, ARG2)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(add(mul(0, ARG2), add(5, ARG3)), mul(add(ARG2, 0), mul(ARG0, -1))), if_then_else(compare(add(0, 3), add(ARG3, 3)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG3, 10), mul(5, ARG2)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, -1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(ARG2, 5), add(ARG0, ARG2)), add(add(100, ARG1), add(100, ARG2))), mul(mul(add(ARG2, 10), add(ARG0, 0)), add(add(ARG0, ARG0), mul(ARG1, 100)))), add(add(mul(mul(100, 1), mul(1, 0)), add(mul(ARG1, 0), mul(ARG3, ARG2))), mul(mul(mul(10, ARG2), add(10, 3)), mul(mul(ARG2, 3), add(3, ARG3))))), if_then_else(compare(add(add(add(100, ARG0), mul(1, 3)), add(mul(ARG1, 0), add(ARG0, 100))), add(mul(add(ARG1, ARG3), mul(100, -1)), mul(mul(ARG0, ARG1), add(ARG3, ARG3)))), if_then_else(compare(mul(add(5, ARG1), mul(ARG0, ARG1)), add(add(10, 3), mul(ARG2, ARG0))), if_then_else(compare(mul(3, 3), add(ARG3, 10)), if_then_else(compare(10, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(0, ARG1), add(ARG0, 5)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(mul(5, -1), add(100, ARG1)), add(mul(5, 3), mul(1, 10))), if_then_else(compare(mul(3, 0), add(ARG0, 3)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(0, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(100, ARG0), mul(ARG0, 5)), if_then_else(compare(10, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(ARG0, 3), add(5, ARG3)), mul(mul(ARG3, 1), mul(100, ARG0))), add(add(add(ARG1, 0), mul(0, 100)), add(add(ARG2, ARG1), mul(3, -1)))), if_then_else(compare(add(add(10, ARG3), mul(ARG2, -1)), add(add(ARG1, 100), add(5, 10))), if_then_else(compare(mul(0, 1), add(ARG0, 1)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(add(3, 1), mul(10, 0)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(ARG3, 100), add(-1, -1)), add(add(100, -1), add(10, -1))), if_then_else(compare(mul(ARG1, ARG1), add(3, 0)), if_then_else(compare(3, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(add(ARG1, 3), add(ARG2, -1)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

6: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, ARG0)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), mul(ARG1, 10)))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, 100), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), mul(ARG0, ARG3)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, 3), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(mul(mul(mul(3, ARG3), add(ARG1, 0)), add(mul(1, 3), mul(100, ARG1))), add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(add(5, ARG1), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

9: 
if_then_else(compare(add(add(add(mul(mul(-1, ARG2), mul(5, 0)), add(add(-1, ARG1), mul(-1, -1))), add(mul(add(ARG2, ARG0), mul(1, ARG3)), add(mul(5, ARG2), add(ARG3, ARG2)))), add(add(add(add(-1, 0), mul(ARG2, ARG3)), add(mul(10, 100), mul(0, ARG1))), mul(mul(mul(ARG3, ARG2), mul(ARG0, ARG1)), add(mul(10, 5), mul(1, ARG0))))), add(add(add(add(mul(100, 1), add(10, ARG3)), add(add(-1, ARG2), mul(-1, ARG0))), add(mul(mul(5, ARG0), add(3, 5)), add(mul(ARG2, 0), add(ARG0, ARG0)))), mul(add(add(mul(3, 3), mul(ARG0, -1)), add(add(ARG1, 100), mul(ARG0, ARG3))), mul(mul(add(-1, ARG1), mul(ARG1, 100)), mul(add(ARG3, 5), mul(ARG2, 1)))))), if_then_else(compare(add(mul(mul(mul(100, ARG2), mul(ARG2, ARG0)), mul(add(ARG0, 1), mul(100, 1))), mul(add(mul(ARG2, ARG3), mul(ARG1, 100)), mul(add(10, ARG0), mul(0, 100)))), add(add(add(mul(10, ARG1), add(-1, ARG0)), add(add(3, ARG1), mul(100, -1))), add(add(mul(3, 1), add(5, ARG1)), mul(add(ARG3, 10), add(ARG3, ARG3))))), if_then_else(compare(add(add(add(1, 5), mul(ARG1, 10)), mul(mul(ARG3, -1), mul(10, 10))), add(mul(mul(0, ARG2), add(ARG1, 10)), mul(add(ARG1, 1), mul(10, 1)))), if_then_else(compare(mul(add(ARG2, ARG1), add(100, ARG3)), mul(add(-1, ARG1), add(ARG1, 1))), if_then_else(compare(add(ARG3, 1), mul(10, 1)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(-1, 100), add(3, ARG0)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(mul(3, ARG2), add(ARG3, 0)), mul(mul(ARG2, 1), add(1, 100))), if_then_else(compare(mul(ARG2, 1), add(-1, ARG2)), if_then_else(compare(5, 3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(10, 3), add(ARG2, ARG3)), if_then_else(compare(0, -1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, 3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))))), if_then_else(compare(add(add(add(ARG0, 3), mul(ARG2, 10)), mul(add(-1, ARG0), mul(1, ARG0))), mul(mul(add(100, 5), add(ARG0, 3)), mul(mul(100, ARG1), mul(ARG2, ARG0)))), if_then_else(compare(mul(mul(ARG2, ARG2), add(ARG0, 3)), add(add(1, ARG1), add(5, 0))), if_then_else(compare(add(1, 0), add(10, -1)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(0, 3), mul(100, ARG0)), if_then_else(compare(3, 1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(add(10, ARG3), add(10, 5)), add(add(ARG2, 10), add(100, 1))), if_then_else(compare(mul(ARG3, ARG1), mul(0, 10)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(ARG2, ARG3), mul(ARG3, -1)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)))))), if_then_else(compare(mul(mul(add(mul(100, ARG1), add(3, 100)), add(mul(ARG1, 100), add(10, 0))), mul(mul(add(0, ARG2), mul(-1, 1)), add(mul(ARG2, ARG3), add(100, ARG3)))), mul(add(add(add(100, -1), add(ARG3, ARG0)), mul(add(0, 0), mul(5, ARG1))), mul(add(mul(-1, 100), mul(ARG2, ARG0)), add(add(0, 1), mul(ARG1, ARG0))))), if_then_else(compare(mul(mul(mul(ARG3, 3), add(ARG3, 5)), mul(mul(ARG1, ARG0), mul(ARG1, 5))), mul(mul(add(ARG3, ARG0), add(ARG1, ARG1)), add(mul(ARG0, ARG3), add(10, ARG1)))), if_then_else(compare(add(add(ARG1, 0), add(100, 5)), mul(add(3, 3), add(10, -1))), if_then_else(compare(mul(100, 100), mul(3, 10)), if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(100, 3), add(-1, ARG0)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG2), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(-1, ARG1), add(-1, -1)), add(mul(1, ARG2), add(0, 1))), if_then_else(compare(add(-1, 3), mul(ARG3, 100)), if_then_else(compare(5, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(3, ARG3), add(-1, 10)), if_then_else(compare(ARG3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(add(100, 5), add(10, ARG1)), mul(mul(100, ARG3), add(0, 100))), mul(add(mul(0, 0), add(ARG0, ARG0)), mul(add(100, 1), mul(10, ARG1)))), if_then_else(compare(add(add(-1, ARG1), add(ARG1, ARG2)), add(mul(100, ARG2), add(ARG1, 1))), if_then_else(compare(mul(5, 1), add(1, 100)), if_then_else(compare(10, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG2, 10), mul(ARG3, ARG2)), if_then_else(compare(10, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(add(mul(5, 5), add(ARG1, 3)), mul(mul(ARG3, -1), add(5, 5))), if_then_else(compare(mul(5, 0), mul(10, 3)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(10, 10), add(100, ARG2)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))))

12: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, ARG0)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), mul(ARG1, 10)))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, 100), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), ret_attack))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), mul(ARG0, ARG3)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(mul(add(mul(-1, 100), mul(ARG2, ARG0)), add(add(0, 1), mul(ARG1, ARG0))), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

15: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(mul(1, ARG0), add(10, 100)), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, ARG0)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), mul(ARG1, 10)))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, 100), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), mul(ARG0, ARG3)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(100, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(mul(ARG1, 10), 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade))))))))))))

18: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(mul(1, ARG0), add(10, 100)), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, ARG0)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), mul(ARG1, 10)))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, 100), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), mul(ARG0, ARG3)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(100, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(mul(ARG1, 10), 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

21: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, ARG0)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), mul(ARG0, ARG3)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

24: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, ARG0)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(100, 3), add(ARG3, -1)), mul(mul(ARG0, -1), mul(-1, 10))), if_then_else(compare(add(100, 5), mul(ARG1, 100)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(1, 100), mul(0, ARG3)), if_then_else(compare(ARG1, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack))))))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

27: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(mul(0, -1), add(-1, 3))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, add(add(5, 3), mul(10, 5))))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

30: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(add(-1, 3), ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))), ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(add(3, 10), ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

33: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(-1, 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(100, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(add(-1, 3), ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(add(mul(ARG0, 0), mul(1, ARG3)), add(add(ARG1, ARG3), add(100, ARG1))), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))), ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(10, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(add(3, 10), ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, 0))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(mul(5, -1), add(ARG3, -1)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

36: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(mul(0, -1), add(-1, 3))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, add(add(5, 3), mul(10, 5))))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

39: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, 1)), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(mul(0, -1), add(-1, 3))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(add(add(add(0, 1), mul(10, 0)), add(add(10, ARG2), add(ARG2, 5))), mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(mul(100, -1), mul(10, -1)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, 1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, add(add(5, 3), mul(10, 5))))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, ARG3), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

42: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(mul(mul(mul(0, 10), mul(ARG1, 5)), mul(add(0, 1), mul(10, add(add(5, 3), mul(10, 5))))), mul(mul(mul(0, ARG1), add(10, ARG3)), add(mul(ARG1, ARG2), add(ARG3, 100)))), if_then_else(compare(add(mul(0, ARG2), mul(0, -1)), mul(mul(ARG3, 10), mul(5, ARG2))), if_then_else(compare(mul(10, 3), add(ARG1, 100)), if_then_else(compare(100, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(3, 5), add(ARG3, 10)), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), ret_attack, ret_evade)), if_then_else(compare(ARG2, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)))), if_then_else(compare(mul(mul(ARG3, 5), add(0, ARG2)), mul(add(ARG3, 0), add(10, 10))), if_then_else(compare(add(5, ARG2), add(3, -1)), if_then_else(compare(0, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(10, ARG2), add(3, ARG3)), if_then_else(compare(ARG2, ARG2), if_then_else(compare(add(1, -1), mul(ARG0, 1)), ret_attack, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(0, 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

45: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(100, ARG3), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

48: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(mul(100, ARG3), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

51: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(100, 10)), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 5), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 1)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(3, 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(add(-1, 10), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), mul(mul(10, ARG3), add(3, ARG3))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(100, ARG3), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(False, if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(compare(add(0, ARG1), mul(0, -1)), if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(ARG2, ARG0), add(ARG0, 0)), add(mul(0, 100), mul(0, 5))), add(mul(mul(0, 5), mul(ARG3, ARG3)), mul(add(5, 3), add(1, 0)))), if_then_else(compare(add(add(3, -1), add(ARG3, 5)), add(mul(ARG0, 1), mul(ARG0, 3))), if_then_else(compare(add(ARG0, ARG3), add(10, 10)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(3, ARG2), mul(3, ARG0)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_attack))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(mul(mul(ARG3, ARG3), add(3, -1)), 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

54: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

57: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 3), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(1, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

63: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, mul(add(1, -1), mul(3, -1))), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, 5), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(mul(100, 100), add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(-1, ARG2), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(0, 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG1, -1), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, ARG2), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

72: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, mul(3, 0)), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(5, ARG0), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, mul(add(add(ARG2, 3), add(ARG3, 1)), mul(mul(1, 5), mul(ARG2, ARG0)))))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

75: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(10, add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(compare(1, ARG2), ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(add(ARG1, -1), add(ARG3, 5))), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(compare(mul(ARG1, 3), mul(0, ARG0)), if_then_else(compare(ARG3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

78: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, -1), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, mul(mul(-1, ARG0), add(ARG1, ARG2))), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

81: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, if_then_else(compare(add(ARG1, ARG1), mul(-1, 100)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop))), ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), add(mul(0, 0), mul(ARG2, 1))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(ARG3, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

84: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

87: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(-1, 3), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(ARG3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

90: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, 3), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(add(0, ARG2), mul(5, 3))), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(add(-1, 1), 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(add(5, 1), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

93: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

96: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(mul(0, 1), 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, add(mul(0, 5), mul(100, 100))), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(5, ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

99: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(mul(100, ARG2), mul(ARG1, 100)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, if_then_else(compare(add(ARG3, -1), add(100, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_attack)))), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(ARG3, 1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(100, ARG1), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

102: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

105: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

108: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), ARG1), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, if_then_else(False, ret_evade, ret_stop)), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

111: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(3, ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(-1, 1)), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(3, ARG2), add(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), 10)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(add(10, 0), mul(1, 10)), mul(mul(-1, ARG3), mul(ARG1, 1))), if_then_else(compare(add(-1, 5), mul(100, 1)), if_then_else(compare(1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(add(5, 5), add(ARG3, ARG0)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)))))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), mul(add(3, ARG0), add(5, ARG1))), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(compare(ARG0, 0), ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(compare(mul(-1, 1), mul(1, ARG3)), ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

114: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

117: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(5, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

120: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(5, mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

123: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(5, mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(3, 1), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

126: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(5, mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(10, ARG0), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, mul(add(ARG3, ARG1), add(ARG3, ARG2)))), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(3, 100), mul(0, 0)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(compare(100, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_stop, ret_attack)))))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), ret_attack)), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(3, 1), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

129: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(add(-1, 3), add(ARG3, -1)))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), ret_evade)), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(5, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(100, ARG3), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(0, add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

132: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), mul(3, 1))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 3), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(add(ARG2, 1), 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(ARG3, ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(compare(add(3, 3), mul(1, 0)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(3, 10), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(mul(10, 3), add(-1, 100)), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(compare(add(mul(mul(ARG0, 1), add(5, ARG1)), add(add(3, 100), add(0, 100))), mul(mul(mul(5, ARG3), mul(-1, -1)), mul(add(-1, 0), mul(100, 100)))), if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(False, if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(-1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(5, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(compare(mul(-1, -1), add(-1, 3)), if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

135: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(5, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

138: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, ARG0)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(5, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

141: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

144: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

147: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

150: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG0, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

153: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, 5)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG0, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG0))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(100, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), mul(ARG0, ARG3))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(mul(3, 3), mul(ARG3, 100)), mul(mul(10, ARG0), add(ARG1, 5))), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(mul(ARG2, ARG0), add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(mul(3, ARG2), ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

156: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(mul(add(add(ARG2, 10), add(10, ARG0)), add(mul(ARG0, 100), mul(ARG0, ARG2))), 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

159: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(100, 100)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(False, if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(compare(ARG2, 10), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(10, mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(ARG3, 10), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(add(-1, ARG2), mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(compare(ARG3, 3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(mul(add(add(0, 1), mul(-1, ARG2)), add(add(1, 10), add(10, ARG0))), ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(add(mul(mul(0, 5), mul(3, 100)), mul(mul(100, 1), add(0, 3))), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

162: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

165: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(-1, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(mul(add(mul(ARG3, 3), add(10, ARG1)), add(add(5, ARG3), add(ARG2, ARG2))), 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, add(mul(-1, -1), add(1, 5))), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

168: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, mul(0, 5))), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(-1, 3), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), 10)), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(mul(add(ARG3, 5), mul(0, 1)), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

171: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, add(add(mul(ARG2, ARG1), add(ARG0, 1)), mul(mul(-1, 0), mul(-1, ARG2)))), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1))))), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(0, mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG3, 10), ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, if_then_else(compare(add(5, 5), add(100, ARG1)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(10, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)))), if_then_else(False, if_then_else(compare(mul(3, ARG1), mul(ARG3, ARG1)), if_then_else(compare(0, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

174: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(5, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, 100), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, ARG3), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, mul(0, 5))), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(mul(100, 1), mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(-1, 3), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), 10)), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(compare(mul(0, ARG1), mul(0, ARG1)), if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack))), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), add(0, ARG3))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(mul(add(ARG3, 5), mul(0, 1)), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), add(1, -1)), if_then_else(compare(5, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack))))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

180: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, add(add(mul(ARG2, ARG1), add(ARG0, 1)), mul(mul(-1, 0), mul(-1, ARG2)))), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1))))), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(10, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(0, mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(False, if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG3, 10), ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

183: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(ARG1, ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, ARG0), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, 0), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, add(add(mul(ARG2, ARG1), add(ARG0, 1)), mul(mul(-1, 0), mul(-1, ARG2)))), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1))))), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(False, if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(ARG1, ARG0), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(0, mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, mul(100, ARG0)), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(10, add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(False, if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG3, 10), ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), ret_evade, if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), add(mul(10, 10), mul(ARG2, ARG0))), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, 0), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), ARG0), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(-1, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, if_then_else(compare(100, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(mul(3, ARG1), mul(ARG3, ARG1)), if_then_else(compare(0, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), ret_evade)), if_then_else(compare(ARG3, ARG1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), ret_attack), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), mul(mul(ARG3, 0), add(0, 3))), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

186: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, add(add(mul(ARG2, ARG1), add(ARG0, 1)), mul(mul(-1, 0), mul(-1, ARG2)))), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1))))), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), ret_evade), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(10, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(0, mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(compare(mul(add(add(add(ARG0, ARG1), mul(ARG2, ARG0)), mul(mul(ARG3, 0), mul(ARG1, ARG2))), ARG2), mul(ARG2, 10)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(False, if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG3, 10), ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(add(0, 10), mul(5, 100)), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

189: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(10, 1))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(compare(add(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(0, 5))), mul(mul(add(100, 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(add(mul(add(mul(ARG2, 0), mul(ARG1, 10)), add(mul(mul(mul(ARG2, mul(mul(-1, ARG0), add(3, ARG1))), add(0, 1)), 10), mul(3, 10))), mul(add(add(10, ARG0), mul(-1, -1)), add(add(100, 0), mul(10, ARG0)))), mul(add(add(add(3, ARG1), mul(ARG3, 0)), mul(mul(ARG1, 1), add(ARG0, -1))), add(mul(mul(5, add(add(mul(ARG2, ARG1), add(ARG0, 1)), mul(mul(-1, 0), mul(-1, ARG2)))), add(3, ARG3)), mul(mul(5, -1), mul(100, 3)))))), add(mul(mul(add(add(add(0, ARG1), mul(5, ARG1)), add(mul(10, 5), add(3, ARG2))), mul(add(mul(0, ARG0), add(ARG2, ARG2)), mul(mul(3, 10), add(ARG2, ARG1)))), mul(mul(mul(add(ARG3, 5), mul(0, 1)), mul(mul(ARG3, -1), mul(ARG2, 3))), mul(mul(add(5, 10), add(ARG3, ARG2)), add(mul(0, mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1))))), mul(ARG2, ARG2))))), mul(mul(mul(mul(add(100, -1), add(3, ARG3)), add(mul(5, 100), add(3, 10))), add(mul(add(-1, 1), mul(3, 3)), mul(mul(-1, ARG3), mul(100, 5)))), mul(mul(add(add(ARG1, 10), mul(-1, ARG2)), mul(mul(0, 100), mul(ARG3, 10))), mul(add(mul(0, ARG1), mul(-1, 3)), mul(add(0, 1), mul(5, 10))))))), if_then_else(compare(mul(mul(add(mul(mul(ARG1, -1), add(3, 10)), mul(add(ARG1, 3), mul(100, -1))), mul(add(add(ARG2, 100), mul(1, 3)), add(add(ARG0, 0), mul(3, ARG1)))), mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(3, 1)), add(mul(10, ARG0), mul(0, 3))))), add(mul(add(mul(add(1, ARG0), mul(ARG3, 3)), add(mul(3, ARG3), add(3, 5))), add(add(add(3, -1), mul(5, ARG2)), mul(mul(10, 0), add(5, 0)))), add(mul(add(mul(10, ARG1), add(ARG1, 100)), mul(add(5, ARG1), mul(3, 100))), mul(mul(add(1, ARG0), mul(-1, 5)), mul(add(1, ARG2), mul(1, 5)))))), if_then_else(compare(add(mul(add(mul(5, 1), add(-1, ARG1)), mul(add(ARG2, ARG3), add(1, 5))), add(mul(add(1, 3), mul(3, ARG3)), mul(mul(0, 100), mul(10, ARG3)))), mul(mul(mul(add(ARG1, 3), add(add(add(ARG2, 10), mul(100, -1)), ARG1)), mul(add(ARG2, 10), mul(ARG2, -1))), add(add(add(0, 0), mul(ARG2, 10)), add(mul(5, ARG3), add(ARG2, 10))))), if_then_else(compare(add(add(mul(10, 0), mul(100, ARG3)), mul(mul(0, 5), mul(ARG0, 100))), add(add(add(-1, 1), mul(-1, ARG3)), add(add(0, -1), add(5, 0)))), if_then_else(compare(mul(add(1, ARG1), mul(0, ARG2)), add(mul(ARG3, 3), add(0, ARG0))), if_then_else(compare(add(0, 10), add(3, 1)), if_then_else(False, if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(3, 5), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(add(ARG2, -1), mul(10, 5)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(add(mul(ARG0, ARG2), add(-1, 100)), add(add(ARG1, ARG0), mul(10, 3))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(1, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(3, 5), add(3, 0)), if_then_else(compare(3, 5), if_then_else(False, ret_attack, ret_attack), ret_evade), ret_stop))), if_then_else(compare(mul(add(add(10, -1), add(ARG3, -1)), add(add(ARG2, ARG2), add(ARG0, -1))), add(mul(add(3, ARG1), add(5, 0)), add(add(ARG1, 1), add(3, 3)))), if_then_else(compare(add(add(3, ARG3), add(0, ARG3)), mul(mul(ARG1, 3), mul(5, 0))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, 5)), ret_attack, if_then_else(compare(-1, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(mul(ARG2, 100), add(ARG2, ARG0)), mul(mul(10, ARG3), add(5, 100))), if_then_else(compare(add(ARG2, ARG3), mul(5, 100)), if_then_else(compare(-1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(3, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG3, ARG0), mul(ARG3, 10)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)))))), ret_attack))), if_then_else(compare(add(mul(add(mul(3, -1), mul(5, 3)), mul(add(100, mul(add(mul(mul(3, 3), mul(ARG1, ARG2)), mul(add(0, -1), mul(0, 10))), mul(mul(mul(-1, ARG0), add(10, 1)), add(mul(10, ARG0), mul(0, 3))))), mul(ARG3, ARG1))), add(mul(add(10, 10), mul(ARG2, 1)), add(add(1, ARG3), add(3, 1)))), mul(0, mul(mul(add(-1, ARG2), mul(100, 100)), add(add(add(add(ARG3, ARG2), mul(-1, 3)), ARG1), add(ARG2, ARG1))))), if_then_else(compare(add(add(mul(ARG3, 5), mul(-1, ARG1)), add(add(ARG3, ARG0), add(ARG3, 10))), mul(add(mul(ARG3, 10), mul(100, -1)), add(add(ARG0, 0), add(0, 1)))), if_then_else(compare(add(add(100, 0), add(-1, 5)), mul(mul(ARG2, ARG2), mul(3, ARG3))), if_then_else(compare(add(ARG0, ARG0), add(ARG1, ARG1)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), ret_stop)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(ARG1, ARG2), add(1, 5)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, if_then_else(compare(1, 3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(add(ARG0, ARG0), mul(3, 0)), add(add(ARG2, ARG3), add(10, -1))), if_then_else(compare(add(ARG0, 5), mul(100, 3)), if_then_else(compare(-1, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(100, 0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG3, 10), add(ARG0, ARG0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(mul(add(mul(0, ARG0), add(ARG1, ARG3)), add(mul(100, 3), add(ARG2, 100))), mul(mul(mul(5, 10), add(0, ARG2)), mul(mul(3, 0), add(ARG1, ARG3)))), if_then_else(compare(add(mul(10, 0), add(100, 5)), mul(mul(5, add(add(add(ARG3, 10), mul(100, ARG3)), mul(add(10, ARG3), add(3, 3)))), mul(100, 0))), if_then_else(compare(mul(ARG0, 0), add(5, 0)), if_then_else(compare(1, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(0, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, ARG1), add(1, 100)), if_then_else(compare(ARG2, 3), if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(compare(ARG0, 1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(3, -1), ret_attack, ret_attack)))), if_then_else(compare(mul(add(-1, ARG0), add(10, ARG0)), add(mul(100, ARG1), add(ARG3, 1))), if_then_else(compare(mul(ARG0, 100), add(0, ARG3)), if_then_else(compare(ARG1, ARG0), if_then_else(compare(100, 100), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG0, 3), ret_evade, ret_evade)), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_stop))), if_then_else(compare(mul(ARG0, 0), add(ARG1, ARG3)), if_then_else(compare(ARG1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, -1), if_then_else(compare(add(ARG1, 100), mul(100, ARG0)), ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))))), if_then_else(compare(mul(add(mul(-1, 0), mul(ARG0, 10)), add(add(100, 3), mul(ARG2, 100))), mul(mul(mul(ARG1, ARG0), mul(ARG0, 10)), add(mul(5, ARG3), mul(-1, 1)))), if_then_else(compare(add(mul(10, ARG0), mul(-1, 1)), mul(add(ARG2, 5), mul(0, 1))), if_then_else(compare(0, mul(0, ARG1)), if_then_else(compare(3, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(3, 10), add(3, 1)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(mul(add(ARG0, ARG1), add(-1, ARG2)), mul(add(ARG0, 0), mul(-1, 10))), if_then_else(False, if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_attack), ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(-1, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG0, ARG0), mul(ARG1, -1)), if_then_else(compare(5, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG0, -1), if_then_else(False, ret_stop, if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade))), if_then_else(False, ret_attack, ret_stop))))))), if_then_else(compare(add(mul(mul(mul(mul(ARG0, ARG2), mul(1, ARG1)), mul(mul(0, ARG0), add(ARG2, 10))), add(mul(mul(ARG0, 1), add(ARG3, ARG0)), mul(mul(ARG1, -1), add(ARG0, 10)))), mul(mul(add(mul(0, 0), mul(1, ARG0)), mul(mul(-1, 10), add(5, ARG0))), mul(add(add(-1, -1), add(5, ARG1)), mul(mul(ARG2, ARG1), mul(10, ARG0))))), add(add(add(mul(mul(-1, ARG0), add(3, ARG1)), add(mul(1, -1), add(ARG2, 3))), mul(mul(add(ARG3, 0), add(ARG1, -1)), mul(mul(100, ARG2), add(10, -1)))), mul(add(mul(add(-1, 3), add(ARG3, -1)), mul(mul(3, 5), add(10, 3))), add(add(add(-1, -1), mul(ARG1, ARG2)), add(add(3, 3), add(ARG1, 3)))))), if_then_else(compare(mul(add(mul(add(0, ARG1), mul(10, ARG1)), add(add(100, 3), add(mul(ARG3, 1), add(10, ARG0)))), mul(mul(mul(-1, ARG3), mul(ARG2, 5)), add(add(1, ARG3), add(100, ARG2)))), mul(add(mul(mul(10, 100), add(3, -1)), mul(add(ARG3, ARG2), add(1, ARG1))), mul(add(mul(0, 5), add(-1, ARG2)), mul(mul(ARG0, 3), mul(ARG2, ARG0))))), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(mul(mul(10, 1), mul(3, 5)), mul(mul(ARG1, ARG1), mul(10, 1))), if_then_else(False, if_then_else(compare(5, 3), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(100, 1), if_then_else(False, ret_attack, if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(mul(ARG1, ARG0), mul(1, 0)), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(100, ARG3), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(add(mul(3, 0), mul(5, ARG3)), mul(mul(ARG3, 0), add(ARG3, ARG1))), if_then_else(compare(add(100, ARG2), add(ARG3, 3)), if_then_else(compare(5, 3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(ARG1, 100), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(3, 5), mul(ARG3, ARG0)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(ARG2, 1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade)))))), if_then_else(compare(mul(mul(add(mul(5, -1), mul(0, 3)), add(add(100, -1), add(ARG1, ARG1))), mul(add(mul(10, ARG0), add(-1, 10)), add(mul(10, 1), add(-1, ARG1)))), mul(add(mul(mul(5, add(0, 5)), mul(1, ARG0)), add(add(5, 10), add(100, 10))), add(mul(mul(ARG0, 0), add(ARG3, 5)), mul(add(-1, 10), add(-1, 1))))), if_then_else(compare(add(add(mul(10, -1), add(ARG0, 100)), mul(10, add(1, ARG1))), mul(add(mul(mul(-1, 1), add(ARG3, ARG3)), add(1, ARG2)), add(mul(ARG3, ARG2), mul(100, 3)))), if_then_else(compare(3, ARG3), if_then_else(compare(mul(3, 10), mul(-1, 1)), if_then_else(compare(ARG3, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG3, 10), ret_evade, ret_evade)), if_then_else(compare(ARG2, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG1), add(-1, 10)), if_then_else(compare(5, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(ARG1, 3), mul(ARG3, -1)), if_then_else(compare(mul(ARG0, 10), mul(100, 1)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(add(add(0, ARG2), add(100, ARG3)), add(add(ARG0, ARG2), mul(ARG1, ARG0))), mul(add(ARG0, 3), add(10, 100))), if_then_else(compare(1, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(5, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_attack))))), if_then_else(compare(add(mul(mul(100, ARG1), add(ARG2, ARG0)), mul(mul(-1, 3), add(ARG0, ARG0))), add(mul(add(0, ARG2), mul(5, 1)), mul(ARG1, mul(1, 3)))), if_then_else(compare(add(mul(0, ARG1), add(5, ARG1)), mul(mul(ARG2, ARG1), add(5, 0))), if_then_else(compare(mul(5, ARG2), mul(5, ARG3)), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(0, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(add(ARG3, 100), mul(3, ARG2)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG1, 10), ret_evade, ret_evade)))), if_then_else(compare(add(mul(5, 0), add(100, 1)), add(mul(3, 5), mul(ARG1, 0))), if_then_else(compare(add(100, 5), mul(ARG0, ARG2)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG0, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop))), if_then_else(compare(add(ARG0, ARG1), mul(10, ARG1)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_stop, ret_evade), ret_attack), if_then_else(compare(3, 3), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(100, ARG3), ret_stop, ret_stop)))))))), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(add(0, 10), mul(5, 100)), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(1, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

195: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, add(0, ARG1))), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

198: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(add(ARG2, -1), 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(mul(1, ARG1), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

201: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), ARG0))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(ARG1, ARG0), ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

204: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(add(mul(3, 3), add(ARG3, 5)), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), add(5, ARG2)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(add(ARG2, -1), 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, add(1, ARG0)))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(mul(add(10, ARG3), add(ARG3, ARG1)), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), add(ARG0, ARG0)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(add(add(5, 5), add(-1, ARG2)), 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG0, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

207: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, mul(add(add(0, 3), mul(ARG1, 1)), mul(add(ARG2, 1), mul(5, 100)))))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(add(mul(3, 3), add(ARG3, 5)), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), add(5, ARG2)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(add(ARG2, -1), 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, add(1, ARG0)))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, ret_evade, if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

210: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), ARG0))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(1, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(ARG1, ARG0), ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

213: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), mul(add(3, 0), -1)), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(ARG1, ARG1), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), mul(ARG0, 0)))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, mul(add(add(0, 3), mul(ARG1, 1)), mul(add(ARG2, 1), mul(5, 100)))))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, ARG3))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(add(mul(3, 3), add(ARG3, 5)), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), add(5, 5)), add(mul(0, ARG3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(0, 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), add(5, ARG2)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(mul(mul(ARG0, ARG3), add(5, ARG0)), ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), add(ARG2, 10)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(compare(add(add(ARG0, 0), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(add(add(5, 5), add(-1, ARG2)), add(add(1, 3), mul(ARG1, ARG1))), mul(mul(add(add(ARG2, -1), 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, add(1, ARG0)))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(add(0, ARG1), mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(add(ARG0, 100), add(ARG1, ARG0)), mul(add(ARG2, ARG3), add(ARG0, 5))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), mul(10, ARG0)), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(mul(mul(add(100, ARG0), mul(0, 1)), add(mul(100, 0), mul(add(ARG3, 1), 0))), mul(mul(add(ARG3, 100), add(ARG2, 1)), mul(mul(0, ARG0), add(ARG3, ARG0)))), if_then_else(compare(mul(mul(1, ARG0), add(ARG3, 1)), add(mul(ARG0, 10), mul(ARG2, 10))), if_then_else(False, ret_evade, if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(add(mul(add(5, ARG2), add(100, 10)), add(mul(3, 3), mul(add(1, 10), mul(5, 0)))), mul(mul(add(ARG1, ARG2), add(ARG2, ARG2)), mul(mul(ARG2, 1), add(ARG3, 10)))), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

216: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), ARG0))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(1, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(ARG1, ARG0), ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

219: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), ARG0))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, ARG2), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(1, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(compare(ARG1, ARG0), ret_attack, ret_evade)))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, add(add(add(ARG1, 10), mul(ARG1, ARG2)), add(mul(ARG3, ARG1), mul(3, ARG0))))), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

225: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), ARG0))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

228: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

231: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

234: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(add(mul(mul(mul(add(add(3, 0), mul(100, 0)), add(add(0, 100), mul(10, 10))), add(mul(mul(ARG1, ARG0), add(10, -1)), add(add(5, ARG2), mul(-1, 100)))), add(add(add(mul(100, ARG2), add(5, 0)), add(add(3, 1), add(5, ARG2))), mul(mul(mul(-1, ARG3), add(100, 10)), add(mul(ARG0, 3), add(0, ARG3))))), add(add(add(add(mul(ARG0, 0), mul(0, 100)), add(mul(ARG3, ARG3), mul(ARG3, 0))), add(mul(add(ARG0, add(mul(add(ARG3, ARG1), add(0, 100)), add(add(ARG2, 5), mul(100, -1)))), add(3, 3)), mul(add(ARG2, ARG3), ARG0))), mul(add(mul(add(3, ARG0), mul(3, 100)), mul(mul(1, 1), add(10, 100))), add(mul(add(-1, ARG3), mul(ARG1, 5)), add(mul(3, 0), mul(ARG3, ARG2)))))), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, 5), add(1, ARG1)), add(mul(3, 10), mul(ARG3, 100))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), 5), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, 100)), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(ARG2, 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(100, 10), if_then_else(compare(mul(ARG1, 5), add(0, -1)), ret_evade, ret_evade), if_then_else(compare(ARG1, ARG0), ret_evade, ret_attack))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

237: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), add(10, ARG0)), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(ARG3, 10), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

240: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), 1), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

243: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), 1), add(add(1, 0), mul(-1, 10)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, 100), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

246: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(0, 10))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(ARG1, ARG0), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), 1), mul(add(ARG2, -1), add(1, 1)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, ARG0), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

249: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(ARG0, 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(add(mul(mul(mul(add(mul(ARG1, -1), mul(ARG0, 5)), mul(mul(-1, 1), mul(1, mul(mul(100, -1), mul(5, 10))))), mul(mul(mul(0, 10), mul(0, 3)), mul(add(5, ARG1), add(1, 1)))), add(mul(mul(add(3, ARG1), mul(5, 100)), add(mul(100, mul(mul(-1, ARG1), add(3, ARG2))), mul(10, ARG1))), mul(add(mul(ARG0, ARG0), add(ARG3, 5)), mul(mul(ARG3, ARG3), add(100, 0))))), mul(add(add(add(mul(100, ARG1), add(ARG2, 100)), add(add(-1, ARG1), add(ARG2, ARG3))), mul(mul(add(10, -1), add(ARG2, 10)), add(add(ARG0, 100), add(100, 100)))), mul(mul(mul(mul(ARG0, ARG1), add(ARG1, 3)), mul(mul(mul(mul(mul(mul(5, 10), add(ARG2, 10)), add(add(1, ARG0), mul(ARG2, ARG2))), mul(add(add(5, 1), add(0, -1)), mul(add(100, ARG1), mul(ARG3, 1)))), add(add(mul(mul(-1, ARG1), add(3, ARG2)), add(add(5, 1), add(add(ARG0, 0), 5))), mul(mul(add(add(ARG2, ARG2), 10), 5), add(mul(ARG1, 3), add(-1, -1))))), add(-1, 5))), add(mul(mul(0, 3), add(ARG0, ARG1)), add(mul(0, 10), add(3, ARG2)))))), add(mul(mul(mul(add(mul(ARG2, 3), add(1, 1)), mul(add(add(mul(ARG3, 100), mul(ARG1, ARG3)), 5), mul(3, ARG1))), add(add(add(3, ARG2), mul(ARG1, 100)), mul(mul(ARG0, ARG3), add(ARG2, ARG3)))), mul(add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100))), mul(mul(add(-1, 0), mul(ARG0, 3)), add(add(5, ARG2), mul(ARG2, ARG3))))), add(mul(add(mul(mul(1, 5), mul(1, 1)), mul(mul(10, 10), add(5, 0))), mul(add(add(ARG3, ARG2), 1), mul(add(ARG2, -1), add(1, 1)))), add(mul(add(mul(-1, -1), mul(-1, ARG0)), add(add(ARG1, ARG0), add(1, ARG2))), mul(mul(mul(ARG3, ARG0), add(10, 10)), add(mul(1, 10), mul(ARG0, 10))))))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(add(add(ARG0, 10), mul(3, ARG3)), 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, ARG2)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(False, if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), add(3, 5))), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

252: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(5, ARG3), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

255: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(ARG3, mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(ARG0, 3), mul(0, 100)), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

258: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(add(0, ARG0), ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(0, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(10, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(add(1, ARG0), 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(0, 0), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

261: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(mul(ARG1, ARG1), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(add(0, ARG0), ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(0, 5), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_evade)))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(10, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, 10), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(compare(add(add(0, 1), mul(ARG3, ARG3)), add(mul(1, 100), add(ARG0, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(add(-1, ARG3), mul(ARG2, 0)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

264: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

267: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(mul(ARG2, ARG0), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(mul(ARG2, ARG0), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(add(add(1, ARG1), mul(ARG1, -1)), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

270: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

276: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), mul(add(ARG3, 0), mul(ARG0, ARG1)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(0, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), mul(-1, ARG2)), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 0)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(add(10, ARG1), mul(1, 5)), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, -1), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), ret_evade, if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), if_then_else(compare(add(ARG1, 100), 0), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

279: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(compare(10, ARG0), ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(-1, 5), if_then_else(compare(ARG3, 0), ret_evade, if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

282: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, ARG1), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, if_then_else(compare(ARG3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(-1, 5), if_then_else(compare(ARG3, 0), ret_evade, if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

285: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, mul(mul(mul(0, ARG1), add(ARG1, ARG3)), add(mul(100, ARG0), mul(3, ARG1)))), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 100), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(compare(ARG1, 10), ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

288: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(add(add(-1, -1), mul(ARG1, -1)), add(add(0, 10), mul(3, ARG2))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_attack, if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

291: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(3, 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(ARG1, 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(-1, ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(add(3, ARG3), add(5, ARG1)), add(add(ARG3, ARG0), add(100, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(0, 5), ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(add(add(-1, -1), mul(ARG1, -1)), add(add(0, 10), mul(3, ARG2))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_attack, if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

294: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), mul(add(add(-1, 10), add(ARG2, 0)), mul(add(-1, ARG0), mul(3, 100)))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(add(10, ARG1), ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

297: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(ARG0, 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(compare(ARG1, -1), ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(mul(100, 5), mul(ARG2, 1))), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(ARG1, -1), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_stop)))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

300: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

303: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(compare(0, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

306: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 5), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, 5), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(mul(mul(10, 3), add(0, 100)), mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_evade, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

309: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

312: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, 100), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), ret_attack)))))

315: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

318: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(compare(5, 5), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

321: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(compare(5, 5), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(mul(add(mul(10, -1), mul(ARG1, 100)), mul(add(ARG0, 100), add(-1, 0))), 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(100, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

324: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), mul(ARG1, 5)), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

327: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), mul(ARG1, 5)), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

330: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), add(mul(add(add(3, 3), mul(5, ARG0)), mul(mul(10, 5), add(10, 10))), mul(add(add(1, 3), add(100, -1)), mul(add(10, 100), add(-1, 10))))), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(add(add(ARG0, 3), add(5, 5)), add(add(ARG1, 10), add(5, 5))), add(3, ARG0))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_evade, ret_evade), ret_stop))), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(ARG3, -1), add(100, 3)), if_then_else(compare(1, 0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(compare(5, 5), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(mul(add(mul(10, -1), mul(ARG1, 100)), mul(add(ARG0, 100), add(-1, 0))), 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(False, if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(5, 5), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(1, 1), if_then_else(False, ret_attack, ret_evade), ret_stop)), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

333: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), mul(ARG1, 5)), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(False, if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

336: 
if_then_else(compare(add(mul(add(add(add(mul(mul(3, ARG1), add(ARG2, 5)), add(add(add(10, ARG0), ARG1), add(ARG3, ARG0))), add(mul(mul(ARG2, ARG2), mul(10, 1)), add(add(-1, 10), add(10, ARG3)))), mul(ARG1, 5)), add(mul(mul(add(mul(ARG3, ARG3), add(3, 5)), add(add(3, mul(mul(mul(5, 10), 5), mul(1, 10))), mul(ARG2, 5))), add(mul(add(10, 10), mul(100, -1)), add(add(5, ARG0), mul(ARG1, ARG0)))), add(mul(mul(add(ARG3, ARG1), add(3, ARG0)), mul(mul(ARG1, 0), mul(ARG1, 100))), add(add(add(3, 100), mul(5, ARG1)), add(add(ARG3, ARG2), add(mul(5, ARG1), 1)))))), add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(mul(mul(mul(ARG3, 0), add(10, 5)), mul(add(5, 3), mul(1, ARG1))), 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), mul(5, 10)), mul(add(3, 3), mul(10, 3))))), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(ARG2, 5), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_evade))), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

339: 
if_then_else(compare(add(10, add(add(add(mul(add(add(mul(mul(5, -1), mul(100, 3)), mul(mul(10, 0), add(3, ARG2))), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

342: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, ARG2)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(mul(ARG2, ARG2), 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

345: 
if_then_else(compare(add(10, add(add(add(mul(add(add(mul(mul(5, -1), mul(100, 3)), mul(mul(10, 0), add(3, ARG2))), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(mul(add(ARG3, ARG1), add(ARG0, ARG0)), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(3, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(False, if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

348: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, mul(mul(100, 100), add(1, ARG1))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

351: 
if_then_else(compare(add(10, add(add(add(mul(add(add(mul(mul(5, -1), mul(100, 3)), mul(mul(10, 0), add(3, ARG2))), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(100, 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(ARG1, mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(mul(ARG2, ARG0), add(ARG0, ARG0)), add(mul(0, 10), mul(ARG3, ARG1))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(mul(add(ARG3, ARG1), add(ARG0, ARG0)), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(False, ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(mul(add(ARG3, ARG1), add(ARG0, ARG0)), 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(10, ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(10, mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(3, 3)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(False, if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_stop), if_then_else(False, ret_stop, ret_stop)))))))))

354: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), 10)))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(10, add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_attack), ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

357: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(add(100, ARG2), add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(compare(mul(mul(-1, ARG3), add(-1, 10)), mul(add(0, 5), mul(ARG1, 0))), if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, mul(ARG3, 3)))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), mul(3, ARG1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(add(ARG0, ARG0), mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), ret_attack, if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(3, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

360: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(10, add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(add(mul(mul(5, 5), mul(ARG0, 1)), mul(mul(ARG0, 5), mul(0, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

363: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(10, add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(mul(mul(add(ARG3, 5), mul(ARG0, ARG1)), mul(mul(100, 10), mul(ARG1, 10))), 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

366: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(10, add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, add(ARG3, ARG1)), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(compare(0, 100), ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(mul(mul(add(ARG3, 5), mul(ARG0, ARG1)), mul(mul(100, 10), mul(ARG1, 10))), 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

369: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

372: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(10, add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, mul(mul(mul(ARG3, 100), mul(ARG1, 1)), add(mul(ARG0, ARG1), add(ARG0, ARG0))))), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(compare(3, -1), ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(add(100, add(5, 100)), ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(mul(mul(add(ARG3, 5), mul(ARG0, ARG1)), mul(mul(100, 10), mul(ARG1, 10))), 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

375: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(add(5, 3), add(1, 10)))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 3), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(add(add(mul(add(add(10, 0), add(0, ARG1)), add(10, add(ARG1, ARG0))), 10), mul(0, 5)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1)))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, add(ARG3, ARG1)), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(add(3, 10), mul(ARG1, 100)), mul(mul(0, -1), mul(100, ARG3))), if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(compare(0, 100), ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(mul(mul(add(ARG3, 5), mul(ARG0, ARG1)), mul(mul(100, 10), mul(ARG1, 10))), 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, -1), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_stop)))), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(add(100, add(5, 100)), mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_stop)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

378: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, ARG0)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

381: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(3, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

384: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, ARG1)))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(ARG1, mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(mul(add(100, ARG2), mul(ARG0, 1)), ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), mul(0, 3)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_attack, ret_attack), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

387: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(mul(ARG1, ARG1), ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

390: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, ret_stop)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, ret_attack, if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), ret_stop, if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(mul(add(mul(mul(10, mul(ARG2, 3)), mul(add(10, -1), add(ARG2, ARG0))), mul(mul(add(-1, ARG0), mul(5, 3)), mul(add(mul(add(add(ARG0, 100), add(-1, -1)), mul(mul(1, 5), add(3, ARG0))), ARG3), add(ARG3, 100)))), add(mul(add(mul(ARG0, ARG2), mul(mul(mul(mul(3, ARG1), mul(ARG1, ARG1)), mul(add(ARG2, ARG3), add(5, ARG3))), 100)), mul(mul(5, -1), add(ARG1, ARG1))), mul(mul(mul(-1, ARG2), mul(100, ARG0)), add(add(0, 0), add(10, ARG2))))), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, if_then_else(False, ret_stop, ret_evade))), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

393: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(5, ARG0), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

396: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(add(5, 3), mul(ARG0, 5)), add(add(0, ARG3), mul(3, ARG3))), ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG1, 10), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_stop, ret_evade)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(-1, ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, ARG3)), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

399: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(False, if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

402: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(5, 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(mul(100, 1), mul(-1, ARG3)), add(mul(1, 5), mul(5, 5))), ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(5, 100), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

405: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

408: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(5, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(compare(10, ARG3), ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

411: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), ret_attack, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(0, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), ret_attack, if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(add(100, 5), add(10, 100)), add(mul(ARG0, 5), mul(100, 10))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)))))))))

414: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(5, ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

417: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(3, ARG1), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(3, 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(10, ARG0), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

420: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(3, add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

423: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(mul(0, 3), mul(-1, 0)), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

426: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(False, if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

429: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, 3), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

432: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, mul(mul(5, -1), mul(10, 10))), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(mul(-1, -1), mul(ARG3, 5)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

435: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, mul(add(1, 100), mul(100, 0)))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(False, if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(10, mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

438: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(0, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 5)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(3, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5))), mul(add(mul(add(mul(add(ARG3, 1), add(10, ARG1)), mul(mul(10, ARG3), add(10, ARG1))), 10), add(0, 0)), add(mul(1, 3), mul(5, 10)))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, 0)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG1, -1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 100), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_evade, ret_attack))), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(mul(0, 1), mul(ARG1, 3)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_stop, ret_evade), if_then_else(False, if_then_else(compare(3, 0), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_stop, ret_stop)), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(False, if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(ARG1, -1), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(add(mul(1, ARG3), add(ARG1, 3)), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(mul(ARG3, 5), -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

441: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 10)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(add(ARG0, 3), add(-1, ARG2))))), if_then_else(compare(mul(-1, -1), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG1, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(5, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(-1, ARG1), if_then_else(False, if_then_else(compare(ARG0, ARG1), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_attack), if_then_else(False, ret_evade, ret_attack)))), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

444: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 10)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, -1), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

447: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 10)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, -1), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(add(ARG3, ARG0), add(3, 5)), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(False, if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG3), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack), if_then_else(False, if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), ret_attack)), if_then_else(compare(5, ARG2), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, ret_stop)))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

450: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, ARG1)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, 3), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(mul(add(1, 3), add(ARG2, 10)), ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(ARG0, ARG2), mul(3, 10)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, -1), mul(ARG3, 5)), if_then_else(False, if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, 3)), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(add(add(add(1, ARG1), add(0, -1)), add(mul(ARG1, 3), mul(10, -1))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

453: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(add(add(10, 1), add(5, -1)), mul(add(5, ARG0), mul(ARG2, ARG0))), mul(3, 10)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

456: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, ARG2)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(mul(add(add(10, 1), add(5, -1)), mul(add(5, ARG0), mul(ARG2, ARG0))), mul(3, 10)))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_attack)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, add(ARG0, 1)), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(0, 100), if_then_else(False, if_then_else(compare(mul(100, 3), mul(ARG2, ARG3)), if_then_else(compare(0, 0), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(-1, ARG1), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_stop), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

459: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(-1, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

462: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 1)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), add(add(ARG0, ARG0), add(100, ARG1))))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), add(add(ARG0, ARG0), add(100, ARG1))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(-1, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

465: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, ARG2)))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(compare(ARG2, 0), ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

471: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

474: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

477: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

480: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(1, mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(mul(mul(5, 3), mul(100, ARG0)), 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_evade), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(compare(add(10, 3), 0), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, add(add(ARG2, 0), mul(ARG0, 10))), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(3, add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(add(add(ARG3, 100), add(5, ARG0)), 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(add(3, 100), add(0, add(add(-1, 100), mul(-1, 100)))), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(compare(mul(ARG2, -1), mul(ARG3, ARG3)), if_then_else(compare(0, 3), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(10, -1), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_stop, ret_attack))), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

483: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(1, mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(mul(mul(5, 3), mul(100, ARG0)), 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_evade), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(compare(add(10, 3), 0), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, mul(add(10, 100), mul(-1, ARG2)))), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, add(add(ARG2, 0), mul(ARG0, 10))), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(3, add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(add(add(ARG3, 100), add(5, ARG0)), 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(add(3, 100), add(0, add(add(-1, 100), mul(-1, 100)))), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

486: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(1, mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(False, if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), ret_evade), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, ARG2), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(compare(add(10, 3), 0), ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(5, ARG3), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_evade)), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(add(ARG1, 100), ARG1), ret_attack, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, add(add(ARG2, 0), mul(ARG0, 10))), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(100, mul(10, 10)), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), if_then_else(False, if_then_else(False, ret_attack, ret_attack), if_then_else(False, if_then_else(False, if_then_else(compare(add(add(3, add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))), ret_stop), ret_stop)), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(add(add(ARG3, 100), add(5, ARG0)), 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(mul(add(3, 100), add(0, add(add(-1, 100), mul(-1, 100)))), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack)), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

489: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(add(3, 100), 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

492: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(add(3, ARG0), add(ARG0, 10)), if_then_else(compare(0, ARG0), if_then_else(compare(ARG3, ARG0), ret_stop, ret_evade), if_then_else(compare(ARG1, 10), ret_stop, ret_attack)), if_then_else(compare(10, ARG1), if_then_else(False, ret_stop, if_then_else(False, ret_stop, ret_attack)), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_stop))))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(add(ARG0, 1), mul(ARG2, -1)), mul(ARG3, 1)), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, if_then_else(False, ret_attack, ret_attack)))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(0, 100), if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(compare(-1, ARG2), ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

495: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(mul(0, 100), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(add(mul(1, ARG2), mul(1, ARG1)), 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, ARG1), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

498: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(add(ARG2, 100), add(-1, -1)), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(ARG2, ARG0)), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(add(mul(1, ARG2), mul(1, ARG1)), 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), mul(ARG0, -1)), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(3, add(mul(add(100, ARG2), add(1, 100)), mul(add(ARG2, -1), add(ARG1, ARG3)))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

501: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

504: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(mul(ARG1, 100), ARG3), add(ARG0, 0))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), ret_attack), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

507: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

510: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, add(ARG3, ARG1))))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(3, 5), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

513: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(mul(ARG0, 3), add(3, ARG1)), mul(mul(100, ARG3), add(10, ARG1))), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, 10), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(ARG1, ARG3), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(5, 10), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(ARG2, 0), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, ARG0), mul(1, -1)), if_then_else(compare(0, 5), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(False, if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

516: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, mul(add(ARG1, 5), mul(ARG2, 100))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

519: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(mul(mul(0, ARG0), mul(ARG2, ARG3)), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, mul(add(ARG1, 5), mul(ARG2, 100))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

522: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

525: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(add(add(-1, 1), ARG3), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(1, mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(mul(mul(0, ARG0), mul(ARG2, ARG3)), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, mul(add(ARG1, 5), mul(ARG2, 100))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

528: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(add(add(-1, 1), ARG3), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), 100), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(mul(mul(0, ARG0), mul(ARG2, ARG3)), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, mul(add(ARG1, 5), mul(ARG2, 100))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

531: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(add(add(-1, 1), ARG3), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), 100), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(mul(ARG2, ARG3), add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(mul(mul(0, ARG0), mul(ARG2, ARG3)), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, mul(add(ARG1, 5), mul(ARG2, 100))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(1, 1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

534: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), ret_attack, if_then_else(False, ret_attack, ret_stop)), ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_evade, ret_evade)), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

537: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(add(ARG3, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG0, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

540: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, -1), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

543: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(add(add(-1, 1), ARG3), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), 100), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(add(ARG3, 0), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(5, 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(-1, mul(100, mul(10, 10)))), ret_evade, if_then_else(compare(3, 1), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(mul(mul(add(0, 1), mul(3, 1)), mul(add(5, -1), mul(3, ARG3))), mul(10, 1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), if_then_else(compare(-1, 0), if_then_else(False, if_then_else(compare(ARG3, 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_stop)), ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop)))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(mul(mul(0, ARG0), mul(ARG2, ARG3)), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, add(add(ARG2, 3), mul(ARG0, -1))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(ARG3, ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), ret_stop), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(3, ARG0), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(mul(ARG2, 1), mul(-1, 10)), ret_evade, ret_evade)), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), if_then_else(False, ret_attack, if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_attack), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade)))))), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, mul(add(ARG1, 5), mul(ARG2, 100))), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, ret_evade, ret_stop), if_then_else(False, ret_attack, ret_evade))))))

546: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(add(-1, 100), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, 1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, if_then_else(False, ret_stop, ret_stop), ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

549: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(compare(3, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

552: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

555: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), -1), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, -1), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(compare(3, 3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), add(-1, 3)), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

558: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

561: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(add(10, ARG0), 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), mul(add(0, -1), mul(-1, 1)))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_evade, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_attack, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

567: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), ARG1), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, add(10, 3)), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), ret_attack, if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

570: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(add(5, 0), add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(ARG1, ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(3, -1), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade))), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

573: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(False, ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

576: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(add(add(ARG1, ARG2), mul(1, -1)), 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

579: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), ret_attack, if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(ARG0, ARG2), add(ARG3, 10)), add(mul(ARG0, ARG2), mul(0, 0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

582: 
if_then_else(compare(add(10, add(add(add(mul(ARG3, 1), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(add(add(ARG1, ARG2), mul(1, -1)), 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(ARG0, ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(False, if_then_else(False, ret_evade, ret_stop), ret_stop), if_then_else(False, ret_attack, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG1, 3), add(1, 1)), if_then_else(compare(5, 100), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(5, ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(False, ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(ARG1, ARG0), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))), if_then_else(False, ret_attack, ret_attack)), if_then_else(compare(ARG1, 5), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_evade, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(compare(0, 100), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop)), if_then_else(False, ret_evade, ret_attack)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(-1, add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(10, 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

585: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, ret_stop), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

588: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

591: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0))), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(100, -1), add(add(ARG0, ARG1), ARG3)), if_then_else(False, if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(10, 0), add(1, ARG3)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(ARG1, ARG3), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(compare(ARG1, ARG3), ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

594: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(compare(mul(mul(ARG3, 3), mul(10, -1)), add(add(1, 5), add(ARG0, -1))), ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(-1, mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(add(add(-1, ARG1), mul(1, 3)), add(add(10, ARG3), add(ARG2, 10))), ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

597: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), 100), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(compare(mul(mul(ARG3, 3), mul(10, -1)), add(add(1, 5), add(ARG0, -1))), ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(ARG3, 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, mul(5, 10))))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(-1, mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(compare(ARG2, 0), ret_evade, ret_evade), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(add(add(-1, ARG1), mul(1, 3)), add(add(10, ARG3), add(ARG2, 10))), ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_stop)))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

600: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(mul(mul(mul(5, 5), mul(5, 10)), add(add(ARG1, -1), mul(ARG3, 0))), add(add(100, ARG3), add(ARG0, 10))), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(add(add(100, ARG2), mul(ARG0, 3)), 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(mul(ARG2, ARG2), 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(add(add(-1, ARG1), mul(1, 3)), add(add(10, ARG3), add(ARG2, 10))), ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(add(100, 1), mul(ARG1, ARG1)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

603: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG2, ARG0), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(mul(mul(mul(5, 5), mul(5, 10)), add(add(ARG1, -1), mul(ARG3, 0))), add(add(100, ARG3), add(ARG0, 10))), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(10, 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), ret_stop)), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(mul(ARG2, ARG2), 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(compare(ARG2, 0), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack), if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(add(ARG3, 5), add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(add(add(-1, ARG1), mul(1, 3)), add(add(10, ARG3), add(ARG2, 10))), ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(ARG3, ARG0), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(add(100, 1), mul(ARG1, ARG1)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

606: 
if_then_else(compare(add(10, add(add(add(mul(add(add(ARG0, 3), mul(ARG1, 3)), add(mul(10, 10), mul(ARG0, 0))), add(mul(3, 3), add(add(100, 10), mul(0, 5)))), add(mul(mul(mul(0, 0), mul(ARG3, ARG3)), mul(mul(0, ARG3), add(0, 0))), mul(mul(add(10, 10), add(0, add(add(5, -1), add(10, add(add(ARG1, -1), mul(ARG3, 1)))))), add(mul(ARG1, 10), add(3, 10))))), mul(add(add(mul(mul(5, ARG0), add(3, 100)), mul(add(-1, 0), mul(ARG3, 100))), add(add(add(3, ARG0), add(ARG3, 5)), mul(add(add(-1, -1), add(ARG2, ARG0)), mul(ARG1, 0)))), mul(mul(add(add(-1, 3), mul(mul(add(ARG0, 1), add(ARG0, ARG3)), add(mul(10, 5), add(ARG3, 100)))), add(mul(5, ARG1), add(0, 100))), mul(mul(add(0, 10), mul(5, 100)), add(mul(3, 0), mul(ARG0, 10))))))), add(mul(mul(mul(mul(ARG3, ARG3), mul(10, 1)), add(add(1, 0), add(100, 0))), 5), mul(add(mul(mul(add(mul(mul(100, ARG2), 1), add(0, 100)), mul(add(ARG2, 100), mul(ARG3, 5))), mul(mul(add(-1, ARG2), add(ARG2, ARG0)), add(mul(ARG1, 3), mul(100, 3)))), add(add(add(add(5, add(add(ARG2, ARG1), add(0, 100))), add(-1, -1)), add(mul(ARG3, ARG2), add(-1, 5))), mul(mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1)), add(mul(3, 10), mul(ARG3, add(mul(mul(-1, ARG2), mul(5, 5)), mul(add(ARG3, ARG2), add(5, 1)))))))), mul(mul(add(mul(mul(1, ARG1), mul(10, ARG1)), add(add(100, 3), add(100, ARG0))), add(add(mul(mul(mul(add(ARG0, 100), add(-1, ARG1)), mul(add(add(100, 1), add(ARG2, ARG1)), mul(add(mul(mul(mul(5, 5), mul(5, 10)), add(add(ARG1, -1), mul(ARG3, 0))), add(add(100, ARG3), add(ARG0, 10))), mul(ARG2, 0)))), 5), mul(1, 10)), add(add(-1, 100), ARG2))), mul(mul(add(mul(ARG1, 0), add(ARG2, 3)), mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(add(add(-1, ARG1), add(1, ARG0)), add(add(ARG1, ARG2), mul(5, 5)))))), mul(add(add(0, 100), mul(0, 5)), mul(mul(ARG2, 5), mul(add(10, 0), 0)))))))), ret_evade, if_then_else(compare(mul(1, ARG1), mul(ARG1, 5)), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(add(-1, 1), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), if_then_else(compare(add(mul(add(add(10, 5), add(ARG2, add(-1, 3))), add(mul(ARG3, 10), add(add(add(100, ARG2), mul(ARG0, 3)), 5))), add(mul(add(ARG1, ARG2), mul(0, 100)), add(add(ARG2, 1), add(ARG0, 1)))), add(mul(mul(add(3, -1), mul(ARG3, -1)), mul(mul(100, ARG0), mul(5, ARG3))), add(add(ARG2, add(10, ARG1)), mul(mul(1, ARG2), add(-1, ARG2))))), if_then_else(compare(mul(-1, add(ARG0, 1)), mul(ARG3, 5)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(mul(ARG1, 5), add(0, -1)), if_then_else(compare(ARG1, ARG3), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(compare(mul(mul(add(add(add(1, add(ARG3, 5)), add(5, 0)), add(add(10, -1), add(100, -1))), add(add(add(ARG3, ARG0), add(3, 5)), mul(add(10, ARG0), mul(ARG0, add(mul(ARG2, 3), add(5, 3)))))), mul(add(add(add(-1, 1), mul(3, 5)), mul(add(5, -1), add(ARG2, ARG1))), add(add(mul(ARG3, 1), add(3, ARG0)), add(add(100, ARG0), mul(ARG2, 10))))), add(mul(mul(add(mul(5, ARG3), add(ARG1, ARG2)), add(add(10, 10), mul(ARG0, 1))), mul(add(mul(ARG0, 0), mul(ARG1, 100)), mul(0, 100))), add(ARG2, add(add(mul(add(add(ARG3, 3), add(ARG3, ARG3)), mul(mul(3, 3), add(1, ARG2))), mul(10, 10)), mul(add(1, ARG1), mul(10, ARG3)))))), ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_evade), ret_attack))), ret_evade), if_then_else(False, if_then_else(compare(add(ARG0, ARG3), mul(0, ARG0)), if_then_else(compare(-1, ARG2), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_attack, ret_stop), if_then_else(compare(mul(-1, ARG3), add(add(add(3, -1), mul(0, -1)), mul(mul(0, ARG2), mul(ARG2, -1)))), ret_evade, if_then_else(compare(3, 1), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_stop, ret_evade)))), if_then_else(compare(mul(10, 5), mul(10, 5)), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_attack, if_then_else(compare(10, ARG3), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_stop))))), if_then_else(compare(ARG2, 0), ret_evade, ret_evade))), if_then_else(compare(add(100, add(add(mul(add(3, ARG0), add(-1, 0)), add(mul(ARG3, 0), add(100, ARG0))), mul(ARG1, ARG1))), mul(mul(add(ARG1, 10), add(5, ARG1)), 0)), if_then_else(compare(mul(add(3, 5), mul(100, ARG3)), add(add(0, 0), mul(10, 0))), if_then_else(False, if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(5, add(add(10, ARG0), add(5, -1))), add(mul(ARG2, ARG2), 10)), ret_stop, ret_evade)), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(add(add(mul(-1, 3), mul(add(10, add(mul(ARG2, ARG2), add(mul(mul(ARG3, ARG0), mul(1, 10)), ARG2))), add(1, ARG1))), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(mul(10, ARG2), 10), mul(-1, ARG2))), add(add(add(5, 3), mul(mul(10, 0), ARG0)), add(ARG1, mul(10, 1))))), if_then_else(compare(add(mul(ARG3, 10), mul(ARG2, 5)), ARG1), ret_attack, if_then_else(compare(mul(add(5, mul(mul(add(10, 3), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(100, 10)), add(add(10, 100), add(-1, 1))), if_then_else(compare(add(ARG3, 10), add(add(ARG0, ARG1), ARG3)), if_then_else(compare(10, ARG1), if_then_else(compare(-1, ARG0), ret_evade, ret_evade), if_then_else(False, ret_attack, ret_evade)), if_then_else(compare(mul(10, 3), add(ARG3, 10)), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(False, ret_attack, ret_stop))), if_then_else(compare(add(ARG1, -1), add(10, ARG1)), if_then_else(compare(10, -1), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_stop)), if_then_else(compare(3, ARG2), if_then_else(False, ret_stop, ret_stop), if_then_else(False, if_then_else(compare(add(ARG3, ARG2), add(0, -1)), if_then_else(compare(5, 100), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_stop, ret_attack)), if_then_else(compare(5, 10), if_then_else(False, ret_attack, ret_stop), if_then_else(False, ret_attack, ret_stop))), ret_evade))))), ret_attack)), if_then_else(compare(add(100, 0), add(add(add(add(mul(1, ARG2), add(ARG3, ARG1)), add(mul(1, 3), mul(-1, ARG2))), add(ARG1, mul(add(100, ARG1), add(ARG2, 10)))), mul(mul(add(mul(10, 0), add(1, ARG3)), add(add(ARG2, ARG0), mul(ARG3, 10))), add(add(add(ARG2, 10), add(ARG3, 100)), mul(add(-1, ARG2), add(5, ARG0)))))), if_then_else(compare(add(add(add(add(3, 1), mul(ARG3, 10)), 10), mul(add(add(3, ARG0), ARG1), add(mul(10, 10), add(ARG2, 10)))), add(mul(add(10, 10), mul(0, ARG2)), add(mul(3, 10), mul(ARG3, -1)))), if_then_else(compare(add(mul(mul(ARG3, ARG2), add(10, 100)), add(mul(ARG2, 10), mul(0, 5))), add(add(add(ARG0, ARG1), add(5, 1)), mul(mul(3, mul(add(add(add(ARG1, -1), mul(ARG3, 1)), ARG1), mul(ARG1, 1))), add(10, -1)))), if_then_else(compare(mul(-1, add(100, 10)), add(mul(-1, 3), add(-1, 1))), if_then_else(compare(-1, ARG0), if_then_else(compare(3, -1), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack), if_then_else(False, ret_stop, if_then_else(compare(add(ARG2, ARG0), add(add(mul(ARG2, mul(ARG2, 3)), add(add(100, 0), mul(3, ARG3))), mul(mul(mul(ARG0, 5), add(mul(add(ARG1, 10), mul(3, 10)), add(mul(5, ARG1), mul(ARG0, 100)))), mul(add(3, 3), mul(10, 3))))), if_then_else(False, ret_evade, ret_stop), if_then_else(compare(0, 5), if_then_else(False, ret_stop, ret_attack), if_then_else(False, ret_evade, ret_evade))))), if_then_else(compare(ARG1, ARG0), if_then_else(False, ret_stop, ret_stop), ret_attack)), if_then_else(compare(mul(add(5, 1), add(5, 1)), add(mul(0, 3), add(ARG1, ARG3))), if_then_else(compare(ARG1, ARG3), if_then_else(compare(ARG1, ARG3), if_then_else(False, ret_stop, ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_attack, ret_stop), if_then_else(False, if_then_else(False, ret_evade, if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), ret_evade, ret_stop)), ret_attack))), ret_attack)), if_then_else(False, if_then_else(compare(mul(ARG2, ARG1), mul(1, 3)), if_then_else(compare(add(mul(mul(-1, ARG0), mul(10, ARG0)), add(add(ARG1, ARG1), mul(5, 1))), 100), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), if_then_else(compare(add(mul(10, ARG2), mul(1, 0)), add(add(ARG2, -1), mul(ARG0, ARG2))), ret_evade, if_then_else(False, ret_evade, ret_evade)), ret_attack)), if_then_else(compare(-1, ARG0), if_then_else(False, ret_evade, if_then_else(compare(ARG2, 0), ret_evade, ret_evade)), if_then_else(compare(10, ARG1), ret_stop, if_then_else(False, ret_stop, ret_stop))))), if_then_else(compare(add(add(-1, ARG1), mul(1, 3)), add(add(10, ARG3), add(ARG2, 10))), ret_stop, ret_attack)), if_then_else(compare(mul(mul(add(mul(ARG2, ARG1), add(ARG3, ARG1)), add(add(100, 10), add(-1, ARG2))), add(mul(-1, 5), add(add(ARG0, 5), mul(10, ARG3)))), add(add(add(mul(-1, 5), add(ARG1, ARG3)), add(add(10, 0), add(0, -1))), add(mul(add(5, ARG1), add(100, 3)), mul(mul(ARG3, 0), add(-1, 1))))), if_then_else(compare(mul(add(add(ARG3, 10), add(mul(-1, 100), mul(0, ARG0))), add(mul(0, 3), mul(-1, 0))), add(mul(add(100, 100), mul(-1, ARG1)), mul(add(ARG1, 5), mul(100, ARG2)))), if_then_else(compare(mul(add(3, add(ARG1, 1)), add(0, ARG1)), add(add(100, ARG1), 3)), ret_evade, if_then_else(False, ret_evade, ret_evade)), if_then_else(compare(ARG3, ARG3), ret_attack, ret_attack)), if_then_else(compare(10, 1), if_then_else(False, if_then_else(compare(mul(ARG2, 0), mul(ARG0, ARG0)), if_then_else(compare(ARG0, ARG2), if_then_else(False, if_then_else(compare(mul(3, ARG2), add(ARG1, 1)), if_then_else(compare(0, -1), if_then_else(False, ret_evade, ret_attack), if_then_else(False, ret_attack, ret_stop)), if_then_else(compare(-1, 10), if_then_else(False, ret_attack, ret_evade), if_then_else(False, ret_attack, ret_attack))), ret_evade), if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(ARG2, ARG3), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_evade, ret_evade))), if_then_else(compare(mul(1, 10), add(ARG1, mul(ARG0, ARG2))), if_then_else(compare(1, 1), ret_attack, if_then_else(False, ret_evade, ret_attack)), if_then_else(compare(mul(ARG2, -1), mul(ARG0, 0)), if_then_else(False, ret_attack, ret_stop), if_then_else(compare(add(add(add(mul(-1, 3), mul(ARG2, ARG2)), add(add(5, 100), mul(-1, 5))), mul(mul(add(10, ARG2), mul(3, 3)), mul(mul(10, -1), mul(ARG3, 5)))), add(add(add(mul(-1, ARG1), mul(5, ARG0)), mul(mul(3, 10), mul(-1, ARG2))), add(mul(mul(10, ARG2), mul(5, ARG2)), add(mul(ARG2, ARG2), mul(10, 1))))), ret_attack, if_then_else(compare(100, ARG1), if_then_else(False, ret_attack, ret_attack), if_then_else(compare(add(100, 1), mul(ARG1, ARG1)), if_then_else(compare(ARG0, ARG0), if_then_else(False, ret_evade, ret_evade), if_then_else(False, ret_evade, ret_stop)), if_then_else(compare(ARG0, 100), if_then_else(False, ret_attack, ret_attack), if_then_else(False, ret_stop, ret_evade)))))))), if_then_else(compare(mul(add(3, 100), add(0, 0)), mul(mul(ARG1, 10), mul(ARG2, 1))), if_then_else(compare(mul(5, 10), mul(10, ARG2)), if_then_else(False, if_then_else(False, ret_evade, ret_attack), ret_attack), if_then_else(compare(mul(10, 1), ARG0), if_then_else(False, ret_stop, ret_attack), if_then_else(compare(mul(10, 5), mul(add(5, 3), 5)), ret_stop, ret_evade))), if_then_else(compare(add(ARG1, 0), add(100, 100)), if_then_else(compare(add(10, 3), 0), if_then_else(False, ret_evade, ret_stop), if_then_else(False, if_then_else(False, ret_attack, ret_stop), ret_evade)), if_then_else(compare(1, add(add(ARG3, 100), add(5, ARG0))), if_then_else(compare(10, -1), ret_attack, ret_attack), if_then_else(False, ret_stop, if_then_else(False, ret_attack, ret_attack))))))))))

